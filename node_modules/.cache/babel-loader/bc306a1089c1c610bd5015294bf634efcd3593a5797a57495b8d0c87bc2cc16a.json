{"ast":null,"code":"function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nvar _require = require('@uppy/provider-views'),\n  ProviderViews = _require.ProviderViews;\nmodule.exports = /*#__PURE__*/function (_ProviderViews) {\n  _inheritsLoose(DriveProviderViews, _ProviderViews);\n  function DriveProviderViews() {\n    return _ProviderViews.apply(this, arguments) || this;\n  }\n  var _proto = DriveProviderViews.prototype;\n  _proto.toggleCheckbox = function toggleCheckbox(e, file) {\n    e.stopPropagation();\n    e.preventDefault(); // Shared Drives aren't selectable; for all else, defer to the base ProviderView.\n    // @todo isTeamDrive is left for backward compatibility. We should remove it in the next\n    // major release.\n\n    if (!file.custom.isTeamDrive && !file.custom.isSharedDrive) {\n      _ProviderViews.prototype.toggleCheckbox.call(this, e, file);\n    }\n  };\n  return DriveProviderViews;\n}(ProviderViews);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}