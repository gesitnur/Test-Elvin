{"ast":null,"code":"/**\n * Takes a file object and turns it into fileID, by converting file.name to lowercase,\n * removing extra characters and adding type, size and lastModified\n *\n * @param {object} file\n * @returns {string} the fileID\n */\nmodule.exports = function generateFileID(file) {\n  // It's tempting to do `[items].filter(Boolean).join('-')` here, but that\n  // is slower! simple string concatenation is fast\n  var id = 'uppy';\n  if (typeof file.name === 'string') {\n    id += \"-\" + encodeFilename(file.name.toLowerCase());\n  }\n  if (file.type !== undefined) {\n    id += \"-\" + file.type;\n  }\n  if (file.meta && typeof file.meta.relativePath === 'string') {\n    id += \"-\" + encodeFilename(file.meta.relativePath.toLowerCase());\n  }\n  if (file.data.size !== undefined) {\n    id += \"-\" + file.data.size;\n  }\n  if (file.data.lastModified !== undefined) {\n    id += \"-\" + file.data.lastModified;\n  }\n  return id;\n};\nfunction encodeFilename(name) {\n  var suffix = '';\n  return name.replace(/[^A-Z0-9]/ig, function (character) {\n    suffix += \"-\" + encodeCharacter(character);\n    return '/';\n  }) + suffix;\n}\nfunction encodeCharacter(character) {\n  return character.charCodeAt(0).toString(32);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}