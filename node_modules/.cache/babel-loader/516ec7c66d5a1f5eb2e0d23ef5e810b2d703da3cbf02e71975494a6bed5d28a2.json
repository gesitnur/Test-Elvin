{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classPrivateFieldLooseBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n  return receiver;\n}\nvar id = 0;\nfunction _classPrivateFieldLooseKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}\nimport { BasePlugin } from '@uppy/core';\nimport Dashboard from '@uppy/dashboard';\nimport Dropbox from '@uppy/dropbox';\nimport GoogleDrive from '@uppy/google-drive';\nimport Instagram from '@uppy/instagram';\nimport Facebook from '@uppy/facebook';\nimport OneDrive from '@uppy/onedrive';\nimport Box from '@uppy/box';\nimport Unsplash from '@uppy/unsplash';\nimport Url from '@uppy/url';\nimport Zoom from '@uppy/zoom';\nconst packageJson = {\n  \"version\": \"1.0.2\"\n};\nconst availablePlugins = {\n  // Using a null-prototype object to avoid prototype pollution.\n  __proto__: null,\n  Box,\n  Dropbox,\n  Facebook,\n  GoogleDrive,\n  Instagram,\n  OneDrive,\n  Unsplash,\n  Url,\n  Zoom\n};\nvar _installedPlugins = /*#__PURE__*/_classPrivateFieldLooseKey(\"installedPlugins\");\nexport default class RemoteSources extends BasePlugin {\n  constructor(uppy, opts) {\n    super(uppy, opts);\n    Object.defineProperty(this, _installedPlugins, {\n      writable: true,\n      value: new Set()\n    });\n    this.id = this.opts.id || 'RemoteSources';\n    this.type = 'acquirer';\n    const defaultOptions = {\n      sources: Object.keys(availablePlugins),\n      target: Dashboard\n    };\n    this.opts = _objectSpread(_objectSpread({}, defaultOptions), opts);\n    if (this.opts.companionUrl == null) {\n      throw new Error('Please specify companionUrl for RemoteSources to work, see https://uppy.io/docs/remote-sources#companionUrl');\n    }\n  }\n  setOptions(newOpts) {\n    this.uninstall();\n    super.setOptions(newOpts);\n    this.install();\n  }\n  install() {\n    this.opts.sources.forEach(pluginId => {\n      const optsForRemoteSourcePlugin = _objectSpread(_objectSpread({}, this.opts), {}, {\n        sources: undefined\n      });\n      const plugin = availablePlugins[pluginId];\n      if (plugin == null) {\n        const pluginNames = Object.keys(availablePlugins);\n        const formatter = new Intl.ListFormat('en', {\n          style: 'long',\n          type: 'disjunction'\n        });\n        throw new Error(`Invalid plugin: \"${pluginId}\" is not one of: ${formatter.format(pluginNames)}.`);\n      }\n      this.uppy.use(plugin, optsForRemoteSourcePlugin); // `plugin` is a class, but we want to track the instance object\n      // so we have to do `getPlugin` here.\n\n      _classPrivateFieldLooseBase(this, _installedPlugins)[_installedPlugins].add(this.uppy.getPlugin(pluginId));\n    });\n  }\n  uninstall() {\n    for (const plugin of _classPrivateFieldLooseBase(this, _installedPlugins)[_installedPlugins]) {\n      this.uppy.removePlugin(plugin);\n    }\n    _classPrivateFieldLooseBase(this, _installedPlugins)[_installedPlugins].clear();\n  }\n}\nRemoteSources.VERSION = packageJson.version;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}