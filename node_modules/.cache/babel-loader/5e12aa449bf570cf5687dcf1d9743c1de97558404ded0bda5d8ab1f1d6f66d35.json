{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar _require = require('preact'),\n  h = _require.h;\nvar classNames = require('classnames');\nvar ItemIcon = require('./components/ItemIcon');\nvar GridLi = require('./components/GridLi');\nvar ListLi = require('./components/ListLi');\nmodule.exports = function (props) {\n  var itemIconString = props.getItemIcon();\n  var className = classNames('uppy-ProviderBrowserItem', {\n    'uppy-ProviderBrowserItem--selected': props.isChecked\n  }, {\n    'uppy-ProviderBrowserItem--disabled': props.isDisabled\n  }, {\n    'uppy-ProviderBrowserItem--noPreview': itemIconString === 'video'\n  });\n  var itemIconEl = h(ItemIcon, {\n    itemIconString: itemIconString\n  });\n  switch (props.viewType) {\n    case 'grid':\n      return h(GridLi, _extends({}, props, {\n        className: className,\n        itemIconEl: itemIconEl\n      }));\n    case 'list':\n      return h(ListLi, _extends({}, props, {\n        className: className,\n        itemIconEl: itemIconEl\n      }));\n    default:\n      throw new Error(\"There is no such type \" + props.viewType);\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}