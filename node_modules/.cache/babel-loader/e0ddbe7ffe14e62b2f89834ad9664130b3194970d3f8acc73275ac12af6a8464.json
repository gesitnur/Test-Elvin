{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { UIPlugin } from '@uppy/core';\nconst packageJson = {\n  \"version\": \"3.0.1\"\n};\n/* eslint-disable max-len */\n\n/**\n * Add Redux DevTools support to Uppy\n *\n * See https://medium.com/@zalmoxis/redux-devtools-without-redux-or-how-to-have-a-predictable-state-with-any-architecture-61c5f5a7716f\n * and https://github.com/zalmoxisus/mobx-remotedev/blob/master/src/monitorActions.js\n */\n\n/* eslint-enable max-len */\n\nexport default class ReduxDevTools extends UIPlugin {\n  constructor(uppy, opts) {\n    super(uppy, opts);\n    this.type = 'debugger';\n    this.id = this.opts.id || 'ReduxDevTools';\n    this.title = 'Redux DevTools'; // set default options\n\n    const defaultOptions = {}; // merge default options with the ones set by user\n\n    this.opts = _objectSpread(_objectSpread({}, defaultOptions), opts);\n    this.handleStateChange = this.handleStateChange.bind(this);\n    this.initDevTools = this.initDevTools.bind(this);\n  }\n  handleStateChange(prevState, nextState) {\n    this.devTools.send('UPPY_STATE_UPDATE', nextState);\n  }\n  initDevTools() {\n    this.devTools = window.devToolsExtension.connect();\n    this.devToolsUnsubscribe = this.devTools.subscribe(message => {\n      if (message.type === 'DISPATCH') {\n        // Implement monitors actions\n        switch (message.payload.type) {\n          case 'RESET':\n            this.uppy.cancelAll();\n            return;\n          case 'IMPORT_STATE':\n            {\n              const computedStates = message.payload.nextLiftedState.computedStates;\n              this.uppy.store.state = _objectSpread(_objectSpread({}, this.uppy.getState()), computedStates[computedStates.length - 1].state);\n              this.uppy.updateAll(this.uppy.getState());\n              return;\n            }\n          case 'JUMP_TO_STATE':\n          case 'JUMP_TO_ACTION':\n            this.uppy.store.state = _objectSpread(_objectSpread({}, this.uppy.getState()), JSON.parse(message.state));\n            this.uppy.updateAll(this.uppy.getState());\n            break;\n          default:\n        }\n      }\n    });\n  }\n  install() {\n    // eslint-disable-next-line no-underscore-dangle\n    this.withDevTools = typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__;\n    if (this.withDevTools) {\n      this.initDevTools();\n      this.uppy.on('state-update', this.handleStateChange);\n    }\n  }\n  uninstall() {\n    if (this.withDevTools) {\n      this.devToolsUnsubscribe();\n      this.uppy.off('state-update', this.handleStateUpdate);\n    }\n  }\n}\nReduxDevTools.VERSION = packageJson.version;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}