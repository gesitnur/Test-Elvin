{"ast":null,"code":"function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nvar _require = require('preact'),\n  h = _require.h,\n  Component = _require.Component;\nvar classNames = require('classnames');\nvar shallowEqual = require('is-shallow-equal');\nvar FilePreviewAndLink = require('./FilePreviewAndLink');\nvar FileProgress = require('./FileProgress');\nvar FileInfo = require('./FileInfo');\nvar Buttons = require('./Buttons');\nmodule.exports = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(FileItem, _Component);\n  function FileItem() {\n    return _Component.apply(this, arguments) || this;\n  }\n  var _proto = FileItem.prototype;\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    return !shallowEqual(this.props, nextProps);\n  };\n  _proto.componentDidMount = function componentDidMount() {\n    var file = this.props.file;\n    if (!file.preview) {\n      this.props.handleRequestThumbnail(file);\n    }\n  } // VirtualList mounts FileItems again and they emit `thumbnail:request`\n  // Otherwise thumbnails are broken or missing after Golden Retriever restores files\n  ;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var file = this.props.file;\n    if (!file.preview) {\n      this.props.handleRequestThumbnail(file);\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var file = this.props.file;\n    if (!file.preview) {\n      this.props.handleCancelThumbnail(file);\n    }\n  };\n  _proto.render = function render() {\n    var file = this.props.file;\n    var isProcessing = file.progress.preprocess || file.progress.postprocess;\n    var isUploaded = file.progress.uploadComplete && !isProcessing && !file.error;\n    var uploadInProgressOrComplete = file.progress.uploadStarted || isProcessing;\n    var uploadInProgress = file.progress.uploadStarted && !file.progress.uploadComplete || isProcessing;\n    var error = file.error || false; // File that Golden Retriever was able to partly restore (only meta, not blob),\n    // users still need to re-add it, so itâ€™s a ghost\n\n    var isGhost = file.isGhost;\n    var showRemoveButton = this.props.individualCancellation ? !isUploaded : !uploadInProgress && !isUploaded;\n    if (isUploaded && this.props.showRemoveButtonAfterComplete) {\n      showRemoveButton = true;\n    }\n    var dashboardItemClass = classNames({\n      'uppy-Dashboard-Item': true,\n      'is-inprogress': uploadInProgress && !this.props.recoveredState,\n      'is-processing': isProcessing,\n      'is-complete': isUploaded,\n      'is-error': !!error,\n      'is-resumable': this.props.resumableUploads,\n      'is-noIndividualCancellation': !this.props.individualCancellation,\n      'is-ghost': isGhost\n    });\n    return h(\"div\", {\n      className: dashboardItemClass,\n      id: \"uppy_\" + file.id,\n      role: this.props.role\n    }, h(\"div\", {\n      className: \"uppy-Dashboard-Item-preview\"\n    }, h(FilePreviewAndLink, {\n      file: file,\n      showLinkToFileUploadResult: this.props.showLinkToFileUploadResult\n    }), h(FileProgress, {\n      file: file,\n      error: error,\n      isUploaded: isUploaded,\n      hideRetryButton: this.props.hideRetryButton,\n      hideCancelButton: this.props.hideCancelButton,\n      hidePauseResumeButton: this.props.hidePauseResumeButton,\n      recoveredState: this.props.recoveredState,\n      showRemoveButtonAfterComplete: this.props.showRemoveButtonAfterComplete,\n      resumableUploads: this.props.resumableUploads,\n      individualCancellation: this.props.individualCancellation,\n      pauseUpload: this.props.pauseUpload,\n      cancelUpload: this.props.cancelUpload,\n      retryUpload: this.props.retryUpload,\n      i18n: this.props.i18n\n    })), h(\"div\", {\n      className: \"uppy-Dashboard-Item-fileInfoAndButtons\"\n    }, h(FileInfo, {\n      file: file,\n      id: this.props.id,\n      acquirers: this.props.acquirers,\n      containerWidth: this.props.containerWidth,\n      i18n: this.props.i18n,\n      toggleAddFilesPanel: this.props.toggleAddFilesPanel\n    }), h(Buttons, {\n      file: file,\n      metaFields: this.props.metaFields,\n      showLinkToFileUploadResult: this.props.showLinkToFileUploadResult,\n      showRemoveButton: showRemoveButton,\n      canEditFile: this.props.canEditFile,\n      uploadInProgressOrComplete: uploadInProgressOrComplete,\n      removeFile: this.props.removeFile,\n      toggleFileCard: this.props.toggleFileCard,\n      openFileEditor: this.props.openFileEditor,\n      i18n: this.props.i18n,\n      log: this.props.log,\n      info: this.props.info\n    })));\n  };\n  return FileItem;\n}(Component);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}