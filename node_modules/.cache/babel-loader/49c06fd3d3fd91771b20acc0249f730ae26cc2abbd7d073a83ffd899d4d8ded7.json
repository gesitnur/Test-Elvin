{"ast":null,"code":"/*\n *  base64.js\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n;\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(global) : typeof define === 'function' && define.amd ? define(factory) : factory(global);\n})(typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : this, function (global) {\n  'use strict';\n\n  // existing version for noConflict()\n  global = global || {};\n  var _Base64 = global.Base64;\n  var version = \"2.6.4\";\n  // constants\n  var b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  var b64tab = function (bin) {\n    var t = {};\n    for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n    return t;\n  }(b64chars);\n  var fromCharCode = String.fromCharCode;\n  // encoder stuff\n  var cb_utob = function (c) {\n    if (c.length < 2) {\n      var cc = c.charCodeAt(0);\n      return cc < 0x80 ? c : cc < 0x800 ? fromCharCode(0xc0 | cc >>> 6) + fromCharCode(0x80 | cc & 0x3f) : fromCharCode(0xe0 | cc >>> 12 & 0x0f) + fromCharCode(0x80 | cc >>> 6 & 0x3f) + fromCharCode(0x80 | cc & 0x3f);\n    } else {\n      var cc = 0x10000 + (c.charCodeAt(0) - 0xD800) * 0x400 + (c.charCodeAt(1) - 0xDC00);\n      return fromCharCode(0xf0 | cc >>> 18 & 0x07) + fromCharCode(0x80 | cc >>> 12 & 0x3f) + fromCharCode(0x80 | cc >>> 6 & 0x3f) + fromCharCode(0x80 | cc & 0x3f);\n    }\n  };\n  var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n  var utob = function (u) {\n    return u.replace(re_utob, cb_utob);\n  };\n  var cb_encode = function (ccc) {\n    var padlen = [0, 2, 1][ccc.length % 3],\n      ord = ccc.charCodeAt(0) << 16 | (ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8 | (ccc.length > 2 ? ccc.charCodeAt(2) : 0),\n      chars = [b64chars.charAt(ord >>> 18), b64chars.charAt(ord >>> 12 & 63), padlen >= 2 ? '=' : b64chars.charAt(ord >>> 6 & 63), padlen >= 1 ? '=' : b64chars.charAt(ord & 63)];\n    return chars.join('');\n  };\n  var btoa = global.btoa && typeof global.btoa == 'function' ? function (b) {\n    return global.btoa(b);\n  } : function (b) {\n    if (b.match(/[^\\x00-\\xFF]/)) throw new RangeError('The string contains invalid characters.');\n    return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n  };\n  var _encode = function (u) {\n    return btoa(utob(String(u)));\n  };\n  var mkUriSafe = function (b64) {\n    return b64.replace(/[+\\/]/g, function (m0) {\n      return m0 == '+' ? '-' : '_';\n    }).replace(/=/g, '');\n  };\n  var encode = function (u, urisafe) {\n    return urisafe ? mkUriSafe(_encode(u)) : _encode(u);\n  };\n  var encodeURI = function (u) {\n    return encode(u, true);\n  };\n  var fromUint8Array;\n  if (global.Uint8Array) fromUint8Array = function (a, urisafe) {\n    // return btoa(fromCharCode.apply(null, a));\n    var b64 = '';\n    for (var i = 0, l = a.length; i < l; i += 3) {\n      var a0 = a[i],\n        a1 = a[i + 1],\n        a2 = a[i + 2];\n      var ord = a0 << 16 | a1 << 8 | a2;\n      b64 += b64chars.charAt(ord >>> 18) + b64chars.charAt(ord >>> 12 & 63) + (typeof a1 != 'undefined' ? b64chars.charAt(ord >>> 6 & 63) : '=') + (typeof a2 != 'undefined' ? b64chars.charAt(ord & 63) : '=');\n    }\n    return urisafe ? mkUriSafe(b64) : b64;\n  };\n  // decoder stuff\n  var re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\n  var cb_btou = function (cccc) {\n    switch (cccc.length) {\n      case 4:\n        var cp = (0x07 & cccc.charCodeAt(0)) << 18 | (0x3f & cccc.charCodeAt(1)) << 12 | (0x3f & cccc.charCodeAt(2)) << 6 | 0x3f & cccc.charCodeAt(3),\n          offset = cp - 0x10000;\n        return fromCharCode((offset >>> 10) + 0xD800) + fromCharCode((offset & 0x3FF) + 0xDC00);\n      case 3:\n        return fromCharCode((0x0f & cccc.charCodeAt(0)) << 12 | (0x3f & cccc.charCodeAt(1)) << 6 | 0x3f & cccc.charCodeAt(2));\n      default:\n        return fromCharCode((0x1f & cccc.charCodeAt(0)) << 6 | 0x3f & cccc.charCodeAt(1));\n    }\n  };\n  var btou = function (b) {\n    return b.replace(re_btou, cb_btou);\n  };\n  var cb_decode = function (cccc) {\n    var len = cccc.length,\n      padlen = len % 4,\n      n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0) | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0) | (len > 2 ? b64tab[cccc.charAt(2)] << 6 : 0) | (len > 3 ? b64tab[cccc.charAt(3)] : 0),\n      chars = [fromCharCode(n >>> 16), fromCharCode(n >>> 8 & 0xff), fromCharCode(n & 0xff)];\n    chars.length -= [0, 0, 2, 1][padlen];\n    return chars.join('');\n  };\n  var _atob = global.atob && typeof global.atob == 'function' ? function (a) {\n    return global.atob(a);\n  } : function (a) {\n    return a.replace(/\\S{1,4}/g, cb_decode);\n  };\n  var atob = function (a) {\n    return _atob(String(a).replace(/[^A-Za-z0-9\\+\\/]/g, ''));\n  };\n  var _decode = function (a) {\n    return btou(_atob(a));\n  };\n  var _fromURI = function (a) {\n    return String(a).replace(/[-_]/g, function (m0) {\n      return m0 == '-' ? '+' : '/';\n    }).replace(/[^A-Za-z0-9\\+\\/]/g, '');\n  };\n  var decode = function (a) {\n    return _decode(_fromURI(a));\n  };\n  var toUint8Array;\n  if (global.Uint8Array) toUint8Array = function (a) {\n    return Uint8Array.from(atob(_fromURI(a)), function (c) {\n      return c.charCodeAt(0);\n    });\n  };\n  var noConflict = function () {\n    var Base64 = global.Base64;\n    global.Base64 = _Base64;\n    return Base64;\n  };\n  // export Base64\n  global.Base64 = {\n    VERSION: version,\n    atob: atob,\n    btoa: btoa,\n    fromBase64: decode,\n    toBase64: encode,\n    utob: utob,\n    encode: encode,\n    encodeURI: encodeURI,\n    btou: btou,\n    decode: decode,\n    noConflict: noConflict,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array\n  };\n  // if ES5 is available, make Base64.extendString() available\n  if (typeof Object.defineProperty === 'function') {\n    var noEnum = function (v) {\n      return {\n        value: v,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      };\n    };\n    global.Base64.extendString = function () {\n      Object.defineProperty(String.prototype, 'fromBase64', noEnum(function () {\n        return decode(this);\n      }));\n      Object.defineProperty(String.prototype, 'toBase64', noEnum(function (urisafe) {\n        return encode(this, urisafe);\n      }));\n      Object.defineProperty(String.prototype, 'toBase64URI', noEnum(function () {\n        return encode(this, true);\n      }));\n    };\n  }\n  //\n  // export Base64 to the namespace\n  //\n  if (global['Meteor']) {\n    // Meteor.js\n    Base64 = global.Base64;\n  }\n  // module.exports and AMD are mutually exclusive.\n  // module.exports has precedence.\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports.Base64 = global.Base64;\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function () {\n      return global.Base64;\n    });\n  }\n  // that's it!\n  return {\n    Base64: global.Base64\n  };\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}