{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * Get uppy instance IDs for which state is stored.\n */\nfunction findUppyInstances() {\n  var instances = [];\n  for (var i = 0; i < localStorage.length; i++) {\n    var key = localStorage.key(i);\n    if (/^uppyState:/.test(key)) {\n      instances.push(key.slice('uppyState:'.length));\n    }\n  }\n  return instances;\n}\n/**\n * Try to JSON-parse a string, return null on failure.\n */\n\nfunction maybeParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch (err) {\n    return null;\n  }\n}\nvar cleanedUp = false;\nmodule.exports = /*#__PURE__*/function () {\n  function MetaDataStore(opts) {\n    this.opts = _extends({\n      expires: 24 * 60 * 60 * 1000\n    }, opts);\n    this.name = \"uppyState:\" + opts.storeName;\n    if (!cleanedUp) {\n      cleanedUp = true;\n      MetaDataStore.cleanup();\n    }\n  }\n  /**\n   *\n   */\n\n  var _proto = MetaDataStore.prototype;\n  _proto.load = function load() {\n    var savedState = localStorage.getItem(this.name);\n    if (!savedState) return null;\n    var data = maybeParse(savedState);\n    if (!data) return null; // Upgrade pre-0.20.0 uppyState: it used to be just a flat object,\n    // without `expires`.\n\n    if (!data.metadata) {\n      this.save(data);\n      return data;\n    }\n    return data.metadata;\n  };\n  _proto.save = function save(metadata) {\n    var expires = Date.now() + this.opts.expires;\n    var state = JSON.stringify({\n      metadata: metadata,\n      expires: expires\n    });\n    localStorage.setItem(this.name, state);\n  }\n  /**\n   * Remove all expired state.\n   */;\n\n  MetaDataStore.cleanup = function cleanup(instanceID) {\n    if (instanceID) {\n      localStorage.removeItem(\"uppyState:\" + instanceID);\n      return;\n    }\n    var instanceIDs = findUppyInstances();\n    var now = Date.now();\n    instanceIDs.forEach(function (id) {\n      var data = localStorage.getItem(\"uppyState:\" + id);\n      if (!data) return null;\n      var obj = maybeParse(data);\n      if (!obj) return null;\n      if (obj.expires && obj.expires < now) {\n        localStorage.removeItem(\"uppyState:\" + id);\n      }\n    });\n  };\n  return MetaDataStore;\n}();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}