{"ast":null,"code":"import * as tus from 'tus-js-client';\nfunction isCordova() {\n  return typeof window !== 'undefined' && (typeof window.PhoneGap !== 'undefined' || typeof window.Cordova !== 'undefined' || typeof window.cordova !== 'undefined');\n}\nfunction isReactNative() {\n  return typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative';\n} // We override tus fingerprint to uppy’s `file.id`, since the `file.id`\n// now also includes `relativePath` for files added from folders.\n// This means you can add 2 identical files, if one is in folder a,\n// the other in folder b — `a/file.jpg` and `b/file.jpg`, when added\n// together with a folder, will be treated as 2 separate files.\n//\n// For React Native and Cordova, we let tus-js-client’s default\n// fingerprint handling take charge.\n\nexport default function getFingerprint(uppyFileObj) {\n  return (file, options) => {\n    if (isCordova() || isReactNative()) {\n      return tus.defaultOptions.fingerprint(file, options);\n    }\n    const uppyFingerprint = ['tus', uppyFileObj.id, options.endpoint].join('-');\n    return Promise.resolve(uppyFingerprint);\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}