{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { h } from 'preact';\nimport classNames from 'classnames';\nimport ItemIcon from \"./components/ItemIcon.js\";\nimport GridListItem from \"./components/GridLi.js\";\nimport ListItem from \"./components/ListLi.js\";\nexport default (props => {\n  const author = props.author,\n    getItemIcon = props.getItemIcon,\n    isChecked = props.isChecked,\n    isDisabled = props.isDisabled,\n    viewType = props.viewType;\n  const itemIconString = getItemIcon();\n  const className = classNames('uppy-ProviderBrowserItem', {\n    'uppy-ProviderBrowserItem--selected': isChecked\n  }, {\n    'uppy-ProviderBrowserItem--disabled': isDisabled\n  }, {\n    'uppy-ProviderBrowserItem--noPreview': itemIconString === 'video'\n  });\n  const itemIconEl = h(ItemIcon, {\n    itemIconString: itemIconString\n  });\n  switch (viewType) {\n    case 'grid':\n      return h(GridListItem // eslint-disable-next-line react/jsx-props-no-spreading\n      , _extends({}, props, {\n        className: className,\n        itemIconEl: itemIconEl\n      }));\n    case 'list':\n      return (\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        h(ListItem, _extends({}, props, {\n          className: className,\n          itemIconEl: itemIconEl\n        }))\n      );\n    case 'unsplash':\n      return (\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        h(GridListItem, _extends({}, props, {\n          className: className,\n          itemIconEl: itemIconEl\n        }), h(\"a\", {\n          href: `${author.url}?utm_source=Companion&utm_medium=referral`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"uppy-ProviderBrowserItem-author\"\n        }, author.name))\n      );\n    default:\n      throw new Error(`There is no such type ${viewType}`);\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}