{"ast":null,"code":"import \"../stylesheets/application.scss\";\nimport \"vanilla-nested\";\n// import \"./fileMultiUpload.js\";\n\nimport Uppy from '@uppy/core';\n// window.Uppy = require('@uppy/core')\n// import FileInput from '@uppy/file-input'\n// import ThumbnailGenerator from '@uppy/thumbnail-generator'\n// import ProgressBar from '@uppy/progress-bar'\n// import Informer from '@uppy/informer'\n// // const Dashboard = require(\"@uppy/dashboard\")\n// const XHRUpload = require(\"@uppy/xhr-upload\")\n// const GoogleDrive = require(\"@uppy/google-drive\")\n\nvar startUppy = function startUppy() {\n  var fileInput = document.querySelector('#my-file-input');\n  console.log('-----a-------------');\n  console.log(fileInput);\n  console.log('-----a-------------');\n  var uppy = new Uppy({\n    debug: true,\n    restrictions: {\n      allowedFileTypes: ['image/*', '.jpg', '.jpeg', '.png', '.gif']\n    }\n  });\n  uppy.on(\"upload-success\", function (file, body) {\n    uppy.setFileState(file.id, {\n      xhr: Object.assign({}, file, {\n        uploadURL: body[\"uploadURL\"],\n        signedId: body[\"signedId\"]\n      })\n    });\n  });\n  uppy.on(\"complete\", function (result) {\n    result.successful.forEach(function (file) {\n      insertImageSignedId(form, input, file.xhr.signedId);\n    });\n  });\n};\nstartUppy();\n\n// Uppy.on('.uppy-FileInput-input', (file) => {\n//         // uppy.emit(\"file-editor:start\", (file) => {\n//         // });\n//         // uppy.getPlugin('Dashboard').openFileEditor(file)\n//         // uppy.openFileEditor(file)\n//         console.log('Added file', file)\n// })\n\n// import Dashboard from '@uppy/dashboard'\n\n// document.addEventListener('DOMContentLoaded', () => {\n//   document.querySelectorAll('.upload-multi-file').forEach(docInput => {\n//     fileMultiUpload(docInput);\n//   });\n// });","map":{"version":3,"names":["Uppy","startUppy","fileInput","document","querySelector","console","log","uppy","debug","restrictions","allowedFileTypes","on","file","body","setFileState","id","xhr","Object","assign","uploadURL","signedId","result","successful","forEach","insertImageSignedId","form","input"],"sources":["/home/gesit/Documents/Project/elvin/app/javascript/packs/application.js"],"sourcesContent":["import \"../stylesheets/application.scss\";\nimport \"vanilla-nested\";\n// import \"./fileMultiUpload.js\";\n\n\nimport Uppy from '@uppy/core'\n// window.Uppy = require('@uppy/core')\n// import FileInput from '@uppy/file-input'\n// import ThumbnailGenerator from '@uppy/thumbnail-generator'\n// import ProgressBar from '@uppy/progress-bar'\n// import Informer from '@uppy/informer'\n// // const Dashboard = require(\"@uppy/dashboard\")\n// const XHRUpload = require(\"@uppy/xhr-upload\")\n// const GoogleDrive = require(\"@uppy/google-drive\")\n\nconst startUppy = () => {\n  const fileInput = document.querySelector('#my-file-input')\n  console.log('-----a-------------');\n  console.log(fileInput);\n  console.log('-----a-------------');\n  const uppy = new Uppy({\n    debug: true,\n    restrictions: {\n      allowedFileTypes: ['image/*', '.jpg', '.jpeg', '.png', '.gif']\n    },\n  })\n\n  uppy.on(\"upload-success\", (file, body) => {\n    uppy.setFileState(file.id, {\n      xhr: Object.assign({}, file, {\n        uploadURL: body[\"uploadURL\"],\n        signedId: body[\"signedId\"]\n      })\n    })\n  })\n\n  uppy.on(\"complete\", result => {\n    result.successful.forEach(file => {\n      insertImageSignedId(form, input, file.xhr.signedId)\n    })\n  })\n}\nstartUppy()\n\n// Uppy.on('.uppy-FileInput-input', (file) => {\n//         // uppy.emit(\"file-editor:start\", (file) => {\n//         // });\n//         // uppy.getPlugin('Dashboard').openFileEditor(file)\n//         // uppy.openFileEditor(file)\n//         console.log('Added file', file)\n// })\n\n\n// import Dashboard from '@uppy/dashboard'\n\n\n\n// document.addEventListener('DOMContentLoaded', () => {\n//   document.querySelectorAll('.upload-multi-file').forEach(docInput => {\n//     fileMultiUpload(docInput);\n//   });\n// });\n"],"mappings":"AAAA,OAAO,iCAAiC;AACxC,OAAO,gBAAgB;AACvB;;AAGA,OAAOA,IAAI,MAAM,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAS,GAAS;EACtB,IAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC;EAC1DC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAClCD,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;EACtBG,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAClC,IAAMC,IAAI,GAAG,IAAIP,IAAI,CAAC;IACpBQ,KAAK,EAAE,IAAI;IACXC,YAAY,EAAE;MACZC,gBAAgB,EAAE,CAAC,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM;IAC/D;EACF,CAAC,CAAC;EAEFH,IAAI,CAACI,EAAE,CAAC,gBAAgB,EAAE,UAACC,IAAI,EAAEC,IAAI,EAAK;IACxCN,IAAI,CAACO,YAAY,CAACF,IAAI,CAACG,EAAE,EAAE;MACzBC,GAAG,EAAEC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEN,IAAI,EAAE;QAC3BO,SAAS,EAAEN,IAAI,CAAC,WAAW,CAAC;QAC5BO,QAAQ,EAAEP,IAAI,CAAC,UAAU;MAC3B,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFN,IAAI,CAACI,EAAE,CAAC,UAAU,EAAE,UAAAU,MAAM,EAAI;IAC5BA,MAAM,CAACC,UAAU,CAACC,OAAO,CAAC,UAAAX,IAAI,EAAI;MAChCY,mBAAmB,CAACC,IAAI,EAAEC,KAAK,EAAEd,IAAI,CAACI,GAAG,CAACI,QAAQ,CAAC;IACrD,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AACDnB,SAAS,EAAE;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAIA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}