{"ast":null,"code":"// Semi-SemiCircle shaped progress bar\n\nvar Shape = require('./shape');\nvar Circle = require('./circle');\nvar utils = require('./utils');\nvar SemiCircle = function SemiCircle(container, options) {\n  // Use one arc to form a SemiCircle\n  // See this answer http://stackoverflow.com/a/10477334/1446092\n  this._pathTemplate = 'M 50,50 m -{radius},0' + ' a {radius},{radius} 0 1 1 {2radius},0';\n  this.containerAspectRatio = 2;\n  Shape.apply(this, arguments);\n};\nSemiCircle.prototype = new Shape();\nSemiCircle.prototype.constructor = SemiCircle;\nSemiCircle.prototype._initializeSvg = function _initializeSvg(svg, opts) {\n  svg.setAttribute('viewBox', '0 0 100 50');\n};\nSemiCircle.prototype._initializeTextContainer = function _initializeTextContainer(opts, container, textContainer) {\n  if (opts.text.style) {\n    // Reset top style\n    textContainer.style.top = 'auto';\n    textContainer.style.bottom = '0';\n    if (opts.text.alignToBottom) {\n      utils.setStyle(textContainer, 'transform', 'translate(-50%, 0)');\n    } else {\n      utils.setStyle(textContainer, 'transform', 'translate(-50%, 50%)');\n    }\n  }\n};\n\n// Share functionality with Circle, just have different path\nSemiCircle.prototype._pathString = Circle.prototype._pathString;\nSemiCircle.prototype._trailString = Circle.prototype._trailString;\nmodule.exports = SemiCircle;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}