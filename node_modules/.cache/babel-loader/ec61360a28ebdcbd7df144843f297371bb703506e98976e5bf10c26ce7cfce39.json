{"ast":null,"code":"import { Core, FileInput, Informer, ProgressBar, XHRUpload } from 'uppy';\ndocument.addEventListener('DOMContentLoaded', function () {\n  var fileInput = document.querySelector('#my-file-input');\n  console.log('-----a-------');\n  console.log(fileInput);\n  console.log('-----a-------');\n  fileInput.addEventListener('change', function (event) {\n    // const files = Array.from(event.target.files)\n\n    // files.forEach((file) => {\n    //   try {\n    //     uppy.addFile({\n    //       source: 'file input',\n    //       name: file.name,\n    //       type: file.type,\n    //       data: file,\n    //     })\n    //   } catch (err) {\n    //     if (err.isRestriction) {\n    //       // handle restrictions\n    //       console.log('Restriction error:', err)\n    //     } else {\n    //       // handle other errors\n    //       console.error(err)\n    //     }\n    //   }\n    // })\n  });\n});\nvar uppy = Core({\n  autoProceed: true\n});","map":{"version":3,"names":["Core","FileInput","Informer","ProgressBar","XHRUpload","document","addEventListener","fileInput","querySelector","console","log","event","uppy","autoProceed"],"sources":["/home/gesit/Documents/Project/elvin/app/javascript/packs/fileMultiUpload.js"],"sourcesContent":["import {\n  Core,\n  FileInput,\n  Informer,\n  ProgressBar,\n  XHRUpload,\n} from 'uppy'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const fileInput = document.querySelector('#my-file-input')\n  console.log('-----a-------')\n  console.log(fileInput)\n  console.log('-----a-------')\n\n  fileInput.addEventListener('change', (event) => {\n    // const files = Array.from(event.target.files)\n\n    // files.forEach((file) => {\n    //   try {\n    //     uppy.addFile({\n    //       source: 'file input',\n    //       name: file.name,\n    //       type: file.type,\n    //       data: file,\n    //     })\n    //   } catch (err) {\n    //     if (err.isRestriction) {\n    //       // handle restrictions\n    //       console.log('Restriction error:', err)\n    //     } else {\n    //       // handle other errors\n    //       console.error(err)\n    //     }\n    //   }\n    // })\n  })\n});\n\nconst uppy = Core({\n  autoProceed: true,\n})"],"mappings":"AAAA,SACEA,IAAI,EACJC,SAAS,EACTC,QAAQ,EACRC,WAAW,EACXC,SAAS,QACJ,MAAM;AAEbC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAM;EAClD,IAAMC,SAAS,GAAGF,QAAQ,CAACG,aAAa,CAAC,gBAAgB,CAAC;EAC1DC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAC5BD,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;EACtBE,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAE5BH,SAAS,CAACD,gBAAgB,CAAC,QAAQ,EAAE,UAACK,KAAK,EAAK;IAC9C;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACD,CAAC;AACJ,CAAC,CAAC;AAEF,IAAMC,IAAI,GAAGZ,IAAI,CAAC;EAChBa,WAAW,EAAE;AACf,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}