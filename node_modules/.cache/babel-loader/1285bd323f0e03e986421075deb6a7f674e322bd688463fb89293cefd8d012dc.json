{"ast":null,"code":"var _class, _temp;\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nvar _require = require('@uppy/core'),\n  Plugin = _require.Plugin;\nvar _require2 = require('preact'),\n  h = _require2.h;\n/**\n * Informer\n * Shows rad message bubbles\n * used like this: `uppy.info('hello world', 'info', 5000)`\n * or for errors: `uppy.info('Error uploading img.jpg', 'error', 5000)`\n *\n */\n\nmodule.exports = (_temp = _class = /*#__PURE__*/function (_Plugin) {\n  _inheritsLoose(Informer, _Plugin);\n  function Informer(uppy, opts) {\n    var _this;\n    _this = _Plugin.call(this, uppy, opts) || this;\n    _this.render = function (state) {\n      var _state$info = state.info,\n        isHidden = _state$info.isHidden,\n        message = _state$info.message,\n        details = _state$info.details;\n      function displayErrorAlert() {\n        var errorMessage = message + \" \\n\\n \" + details;\n        alert(errorMessage);\n      }\n      var handleMouseOver = function handleMouseOver() {\n        clearTimeout(_this.uppy.infoTimeoutID);\n      };\n      var handleMouseLeave = function handleMouseLeave() {\n        _this.uppy.infoTimeoutID = setTimeout(_this.uppy.hideInfo, 2000);\n      };\n      return h(\"div\", {\n        className: \"uppy uppy-Informer\",\n        \"aria-hidden\": isHidden\n      }, h(\"p\", {\n        role: \"alert\"\n      }, message, ' ', details && h(\"span\", {\n        \"aria-label\": details,\n        \"data-microtip-position\": \"top-left\",\n        \"data-microtip-size\": \"medium\",\n        role: \"tooltip\",\n        onClick: displayErrorAlert,\n        onMouseOver: handleMouseOver,\n        onMouseLeave: handleMouseLeave\n      }, \"?\")));\n    };\n    _this.type = 'progressindicator';\n    _this.id = _this.opts.id || 'Informer';\n    _this.title = 'Informer'; // set default options\n\n    var defaultOptions = {}; // merge default options with the ones set by user\n\n    _this.opts = _extends({}, defaultOptions, opts);\n    return _this;\n  }\n  var _proto = Informer.prototype;\n  _proto.install = function install() {\n    var target = this.opts.target;\n    if (target) {\n      this.mount(target, this);\n    }\n  };\n  return Informer;\n}(Plugin), _class.VERSION = \"1.6.6\", _temp);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}