{"ast":null,"code":"import { h } from 'preact'; // if folder:\n//   + checkbox (selects all files from folder)\n//   + folder name (opens folder)\n// if file:\n//   + checkbox (selects file)\n//   + file name (selects file)\n\nfunction ListItem(props) {\n  const className = props.className,\n    isDisabled = props.isDisabled,\n    restrictionError = props.restrictionError,\n    isCheckboxDisabled = props.isCheckboxDisabled,\n    isChecked = props.isChecked,\n    toggleCheckbox = props.toggleCheckbox,\n    recordShiftKeyPress = props.recordShiftKeyPress,\n    type = props.type,\n    id = props.id,\n    itemIconEl = props.itemIconEl,\n    title = props.title,\n    handleFolderClick = props.handleFolderClick,\n    showTitles = props.showTitles,\n    i18n = props.i18n;\n  return h(\"li\", {\n    className: className,\n    title: isDisabled ? restrictionError == null ? void 0 : restrictionError.message : null\n  }, !isCheckboxDisabled ? h(\"input\", {\n    type: \"checkbox\",\n    className: `uppy-u-reset uppy-ProviderBrowserItem-checkbox ${isChecked ? 'uppy-ProviderBrowserItem-checkbox--is-checked' : ''}`,\n    onChange: toggleCheckbox,\n    onKeyDown: recordShiftKeyPress // for the <label/>\n    ,\n\n    name: \"listitem\",\n    id: id,\n    checked: isChecked,\n    \"aria-label\": type === 'file' ? null : i18n('allFilesFromFolderNamed', {\n      name: title\n    }),\n    disabled: isDisabled,\n    \"data-uppy-super-focusable\": true\n  }) : null, type === 'file' ?\n  // label for a checkbox\n  h(\"label\", {\n    htmlFor: id,\n    className: \"uppy-u-reset uppy-ProviderBrowserItem-inner\"\n  }, h(\"div\", {\n    className: \"uppy-ProviderBrowserItem-iconWrap\"\n  }, itemIconEl), showTitles && title) :\n  // button to open a folder\n  h(\"button\", {\n    type: \"button\",\n    className: \"uppy-u-reset uppy-c-btn uppy-ProviderBrowserItem-inner\",\n    onClick: handleFolderClick,\n    \"aria-label\": i18n('openFolderNamed', {\n      name: title\n    })\n  }, h(\"div\", {\n    className: \"uppy-ProviderBrowserItem-iconWrap\"\n  }, itemIconEl), showTitles && h(\"span\", null, title)));\n}\nexport default ListItem;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}