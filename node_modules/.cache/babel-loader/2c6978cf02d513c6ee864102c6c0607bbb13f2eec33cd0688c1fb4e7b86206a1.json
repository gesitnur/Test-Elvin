{"ast":null,"code":"function _classPrivateFieldLooseBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n  return receiver;\n}\nvar id = 0;\nfunction _classPrivateFieldLooseKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}\nimport { h, Component } from 'preact';\nvar _handleKeyPress = /*#__PURE__*/_classPrivateFieldLooseKey(\"handleKeyPress\");\nvar _handleSubmit = /*#__PURE__*/_classPrivateFieldLooseKey(\"handleSubmit\");\nclass UrlUI extends Component {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, _handleKeyPress, {\n      writable: true,\n      value: ev => {\n        if (ev.keyCode === 13) {\n          _classPrivateFieldLooseBase(this, _handleSubmit)[_handleSubmit]();\n        }\n      }\n    });\n    Object.defineProperty(this, _handleSubmit, {\n      writable: true,\n      value: () => {\n        const addFile = this.props.addFile;\n        const preparedValue = this.input.value.trim();\n        addFile(preparedValue);\n      }\n    });\n  }\n  componentDidMount() {\n    this.input.value = '';\n  }\n  render() {\n    const i18n = this.props.i18n;\n    return h(\"div\", {\n      className: \"uppy-Url\"\n    }, h(\"input\", {\n      className: \"uppy-u-reset uppy-c-textInput uppy-Url-input\",\n      type: \"text\",\n      \"aria-label\": i18n('enterUrlToImport'),\n      placeholder: i18n('enterUrlToImport'),\n      onKeyUp: _classPrivateFieldLooseBase(this, _handleKeyPress)[_handleKeyPress],\n      ref: input => {\n        this.input = input;\n      },\n      \"data-uppy-super-focusable\": true\n    }), h(\"button\", {\n      className: \"uppy-u-reset uppy-c-btn uppy-c-btn-primary uppy-Url-importButton\",\n      type: \"button\",\n      onClick: _classPrivateFieldLooseBase(this, _handleSubmit)[_handleSubmit]\n    }, i18n('import')));\n  }\n}\nexport default UrlUI;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}