{"ast":null,"code":"/**\n * Create a wrapper around an event emitter with a `remove` method to remove\n * all events that were added using the wrapped emitter.\n */\nmodule.exports = /*#__PURE__*/function () {\n  function EventTracker(emitter) {\n    this._events = [];\n    this._emitter = emitter;\n  }\n  var _proto = EventTracker.prototype;\n  _proto.on = function on(event, fn) {\n    this._events.push([event, fn]);\n    return this._emitter.on(event, fn);\n  };\n  _proto.remove = function remove() {\n    var _this = this;\n    this._events.forEach(function (_ref) {\n      var event = _ref[0],\n        fn = _ref[1];\n      _this._emitter.off(event, fn);\n    });\n  };\n  return EventTracker;\n}();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}