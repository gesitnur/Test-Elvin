{"ast":null,"code":"import { Core, FileInput, Informer, ProgressBar, XHRUpload } from 'uppy';\ndocument.addEventListener('DOMContentLoaded', function () {\n  var fileInput = document.querySelector('#my-file-input');\n  // console.log('-----a-------')\n  // console.log(fileInput)\n  // console.log('-----a-------')\n\n  fileInput.addEventListener('change', function (event) {\n    var files = Array.from(event.target.files);\n    files.forEach(function (file) {\n      console.log(file.meta['key'].match(/^public\\/cache\\/(.+)/)[1]);\n      try {\n        uppy.addFile({\n          source: 'file input',\n          name: file.name,\n          type: file.type,\n          data: file\n        });\n      } catch (err) {\n        if (err.isRestriction) {\n          // handle restrictions\n          console.log('Restriction error:', err);\n        } else {\n          // handle other errors\n          console.error(err);\n        }\n      }\n    });\n  });\n});\nvar uppy = Core({\n  autoProceed: true\n});","map":{"version":3,"names":["Core","FileInput","Informer","ProgressBar","XHRUpload","document","addEventListener","fileInput","querySelector","event","files","Array","from","target","forEach","file","console","log","meta","match","uppy","addFile","source","name","type","data","err","isRestriction","error","autoProceed"],"sources":["/home/gesit/Documents/Project/elvin/app/javascript/packs/fileMultiUpload.js"],"sourcesContent":["import {\n  Core,\n  FileInput,\n  Informer,\n  ProgressBar,\n  XHRUpload,\n} from 'uppy'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const fileInput = document.querySelector('#my-file-input')\n  // console.log('-----a-------')\n  // console.log(fileInput)\n  // console.log('-----a-------')\n\n  fileInput.addEventListener('change', (event) => {\n    const files = Array.from(event.target.files)\n\n    files.forEach((file) => {\n    console.log(file.meta['key'].match(/^public\\/cache\\/(.+)/)[1])\n      try {\n        uppy.addFile({\n          source: 'file input',\n          name: file.name,\n          type: file.type,\n          data: file,\n        })\n      } catch (err) {\n        if (err.isRestriction) {\n          // handle restrictions\n          console.log('Restriction error:', err)\n        } else {\n          // handle other errors\n          console.error(err)\n        }\n      }\n    })\n  })\n});\n\nconst uppy = Core({\n  autoProceed: true,\n})"],"mappings":"AAAA,SACEA,IAAI,EACJC,SAAS,EACTC,QAAQ,EACRC,WAAW,EACXC,SAAS,QACJ,MAAM;AAEbC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAM;EAClD,IAAMC,SAAS,GAAGF,QAAQ,CAACG,aAAa,CAAC,gBAAgB,CAAC;EAC1D;EACA;EACA;;EAEAD,SAAS,CAACD,gBAAgB,CAAC,QAAQ,EAAE,UAACG,KAAK,EAAK;IAC9C,IAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACI,MAAM,CAACH,KAAK,CAAC;IAE5CA,KAAK,CAACI,OAAO,CAAC,UAACC,IAAI,EAAK;MACxBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,IAAI,CAAC,KAAK,CAAC,CAACC,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5D,IAAI;QACFC,IAAI,CAACC,OAAO,CAAC;UACXC,MAAM,EAAE,YAAY;UACpBC,IAAI,EAAER,IAAI,CAACQ,IAAI;UACfC,IAAI,EAAET,IAAI,CAACS,IAAI;UACfC,IAAI,EAAEV;QACR,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOW,GAAG,EAAE;QACZ,IAAIA,GAAG,CAACC,aAAa,EAAE;UACrB;UACAX,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAES,GAAG,CAAC;QACxC,CAAC,MAAM;UACL;UACAV,OAAO,CAACY,KAAK,CAACF,GAAG,CAAC;QACpB;MACF;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,IAAMN,IAAI,GAAGpB,IAAI,CAAC;EAChB6B,WAAW,EAAE;AACf,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}