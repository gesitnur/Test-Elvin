{"ast":null,"code":"var _require = require('preact'),\n  h = _require.h;\nvar getAriaLabelOfCheckbox = function getAriaLabelOfCheckbox(props) {\n  if (props.type === 'folder') {\n    if (props.isChecked) {\n      return props.i18n('unselectAllFilesFromFolderNamed', {\n        name: props.title\n      });\n    }\n    return props.i18n('selectAllFilesFromFolderNamed', {\n      name: props.title\n    });\n  }\n  if (props.isChecked) {\n    return props.i18n('unselectFileNamed', {\n      name: props.title\n    });\n  }\n  return props.i18n('selectFileNamed', {\n    name: props.title\n  });\n}; // if folder:\n//   + checkbox (selects all files from folder)\n//   + folder name (opens folder)\n// if file:\n//   + checkbox (selects file)\n//   + file name (selects file)\n\nmodule.exports = function (props) {\n  return h(\"li\", {\n    className: props.className,\n    title: props.isDisabled ? props.restrictionReason : null\n  }, !props.isCheckboxDisabled ? h(\"button\", {\n    type: \"button\",\n    className: \"uppy-u-reset uppy-ProviderBrowserItem-fakeCheckbox \" + (props.isChecked ? 'uppy-ProviderBrowserItem-fakeCheckbox--is-checked' : ''),\n    onClick: props.toggleCheckbox // for the <label/>\n    ,\n\n    id: props.id,\n    role: \"option\",\n    \"aria-label\": getAriaLabelOfCheckbox(props),\n    \"aria-selected\": props.isChecked,\n    \"aria-disabled\": props.isDisabled,\n    disabled: props.isDisabled,\n    \"data-uppy-super-focusable\": true\n  }) : null, props.type === 'file' ?\n  // label for a checkbox\n  h(\"label\", {\n    htmlFor: props.id,\n    className: \"uppy-u-reset uppy-ProviderBrowserItem-inner\"\n  }, h(\"div\", {\n    className: \"uppy-ProviderBrowserItem-iconWrap\"\n  }, props.itemIconEl), props.showTitles && props.title) :\n  // button to open a folder\n  h(\"button\", {\n    type: \"button\",\n    className: \"uppy-u-reset uppy-ProviderBrowserItem-inner\",\n    onClick: props.handleFolderClick,\n    \"aria-label\": props.i18n('openFolderNamed', {\n      name: props.title\n    })\n  }, h(\"div\", {\n    className: \"uppy-ProviderBrowserItem-iconWrap\"\n  }, props.itemIconEl), props.showTitles && h(\"span\", null, props.title)));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}