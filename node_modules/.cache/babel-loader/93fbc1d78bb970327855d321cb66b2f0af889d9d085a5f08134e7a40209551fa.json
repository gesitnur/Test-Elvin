{"ast":null,"code":"var _require = require('./AbortController'),\n  createAbortError = _require.createAbortError;\n/**\n * Return a Promise that resolves after `ms` milliseconds.\n *\n * @param {number} ms - Number of milliseconds to wait.\n * @param {{ signal?: AbortSignal }} [opts] - An abort signal that can be used to cancel the delay early.\n * @returns {Promise<void>} A Promise that resolves after the given amount of `ms`.\n */\n\nmodule.exports = function delay(ms, opts) {\n  return new Promise(function (resolve, reject) {\n    if (opts && opts.signal && opts.signal.aborted) {\n      return reject(createAbortError());\n    }\n    function onabort() {\n      clearTimeout(timeout);\n      cleanup();\n      reject(createAbortError());\n    }\n    var timeout = setTimeout(function () {\n      cleanup();\n      resolve();\n    }, ms);\n    if (opts && opts.signal) {\n      opts.signal.addEventListener('abort', onabort);\n    }\n    function cleanup() {\n      if (opts && opts.signal) {\n        opts.signal.removeEventListener('abort', onabort);\n      }\n    }\n  });\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}