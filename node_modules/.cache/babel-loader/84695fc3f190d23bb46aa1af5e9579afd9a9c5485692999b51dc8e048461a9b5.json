{"ast":null,"code":"// JavaScript autoComplete v1.0.4\n// https://github.com/Pixabay/JavaScript-autoComplete\nvar autoComplete = function () {\n  function e(e) {\n    function t(e, t) {\n      return e.classList ? e.classList.contains(t) : new RegExp(\"\\\\b\" + t + \"\\\\b\").test(e.className);\n    }\n    function o(e, t, o) {\n      e.attachEvent ? e.attachEvent(\"on\" + t, o) : e.addEventListener(t, o);\n    }\n    function s(e, t, o) {\n      e.detachEvent ? e.detachEvent(\"on\" + t, o) : e.removeEventListener(t, o);\n    }\n    function n(e, s, n, l) {\n      o(l || document, s, function (o) {\n        for (var s, l = o.target || o.srcElement; l && !(s = t(l, e));) l = l.parentElement;\n        s && n.call(l, o);\n      });\n    }\n    if (document.querySelector) {\n      var l = {\n        selector: 0,\n        source: 0,\n        minChars: 3,\n        delay: 150,\n        offsetLeft: 0,\n        offsetTop: 1,\n        cache: 1,\n        menuClass: \"\",\n        renderItem: function (e, t) {\n          t = t.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n          var o = new RegExp(\"(\" + t.split(\" \").join(\"|\") + \")\", \"gi\");\n          return '<div class=\"autocomplete-suggestion\" data-val=\"' + e + '\">' + e.replace(o, \"<b>$1</b>\") + \"</div>\";\n        },\n        onSelect: function () {}\n      };\n      for (var c in e) e.hasOwnProperty(c) && (l[c] = e[c]);\n      for (var a = \"object\" == typeof l.selector ? [l.selector] : document.querySelectorAll(l.selector), u = 0; u < a.length; u++) {\n        var i = a[u];\n        i.sc = document.createElement(\"div\"), i.sc.className = \"autocomplete-suggestions \" + l.menuClass, i.autocompleteAttr = i.getAttribute(\"autocomplete\"), i.setAttribute(\"autocomplete\", \"off\"), i.cache = {}, i.last_val = \"\", i.updateSC = function (e, t) {\n          var o = i.getBoundingClientRect();\n          if (i.sc.style.left = Math.round(o.left + (window.pageXOffset || document.documentElement.scrollLeft) + l.offsetLeft) + \"px\", i.sc.style.top = Math.round(o.bottom + (window.pageYOffset || document.documentElement.scrollTop) + l.offsetTop) + \"px\", i.sc.style.width = Math.round(o.right - o.left) + \"px\", !e && (i.sc.style.display = \"block\", i.sc.maxHeight || (i.sc.maxHeight = parseInt((window.getComputedStyle ? getComputedStyle(i.sc, null) : i.sc.currentStyle).maxHeight)), i.sc.suggestionHeight || (i.sc.suggestionHeight = i.sc.querySelector(\".autocomplete-suggestion\").offsetHeight), i.sc.suggestionHeight)) if (t) {\n            var s = i.sc.scrollTop,\n              n = t.getBoundingClientRect().top - i.sc.getBoundingClientRect().top;\n            n + i.sc.suggestionHeight - i.sc.maxHeight > 0 ? i.sc.scrollTop = n + i.sc.suggestionHeight + s - i.sc.maxHeight : 0 > n && (i.sc.scrollTop = n + s);\n          } else i.sc.scrollTop = 0;\n        }, o(window, \"resize\", i.updateSC), document.body.appendChild(i.sc), n(\"autocomplete-suggestion\", \"mouseleave\", function () {\n          var e = i.sc.querySelector(\".autocomplete-suggestion.selected\");\n          e && setTimeout(function () {\n            e.className = e.className.replace(\"selected\", \"\");\n          }, 20);\n        }, i.sc), n(\"autocomplete-suggestion\", \"mouseover\", function () {\n          var e = i.sc.querySelector(\".autocomplete-suggestion.selected\");\n          e && (e.className = e.className.replace(\"selected\", \"\")), this.className += \" selected\";\n        }, i.sc), n(\"autocomplete-suggestion\", \"mousedown\", function (e) {\n          if (t(this, \"autocomplete-suggestion\")) {\n            var o = this.getAttribute(\"data-val\");\n            i.value = o, l.onSelect(e, o, this), i.sc.style.display = \"none\";\n          }\n        }, i.sc), i.blurHandler = function () {\n          try {\n            var e = document.querySelector(\".autocomplete-suggestions:hover\");\n          } catch (t) {\n            var e = 0;\n          }\n          e ? i !== document.activeElement && setTimeout(function () {\n            i.focus();\n          }, 20) : (i.last_val = i.value, i.sc.style.display = \"none\", setTimeout(function () {\n            i.sc.style.display = \"none\";\n          }, 350));\n        }, o(i, \"blur\", i.blurHandler);\n        var r = function (e) {\n          var t = i.value;\n          if (i.cache[t] = e, e.length && t.length >= l.minChars) {\n            for (var o = \"\", s = 0; s < e.length; s++) o += l.renderItem(e[s], t);\n            i.sc.innerHTML = o, i.updateSC(0);\n          } else i.sc.style.display = \"none\";\n        };\n        i.keydownHandler = function (e) {\n          var t = window.event ? e.keyCode : e.which;\n          if ((40 == t || 38 == t) && i.sc.innerHTML) {\n            var o,\n              s = i.sc.querySelector(\".autocomplete-suggestion.selected\");\n            return s ? (o = 40 == t ? s.nextSibling : s.previousSibling, o ? (s.className = s.className.replace(\"selected\", \"\"), o.className += \" selected\", i.value = o.getAttribute(\"data-val\")) : (s.className = s.className.replace(\"selected\", \"\"), i.value = i.last_val, o = 0)) : (o = 40 == t ? i.sc.querySelector(\".autocomplete-suggestion\") : i.sc.childNodes[i.sc.childNodes.length - 1], o.className += \" selected\", i.value = o.getAttribute(\"data-val\")), i.updateSC(0, o), !1;\n          }\n          if (27 == t) i.value = i.last_val, i.sc.style.display = \"none\";else if (13 == t || 9 == t) {\n            var s = i.sc.querySelector(\".autocomplete-suggestion.selected\");\n            s && \"none\" != i.sc.style.display && (l.onSelect(e, s.getAttribute(\"data-val\"), s), setTimeout(function () {\n              i.sc.style.display = \"none\";\n            }, 20));\n          }\n        }, o(i, \"keydown\", i.keydownHandler), i.keyupHandler = function (e) {\n          var t = window.event ? e.keyCode : e.which;\n          if (!t || (35 > t || t > 40) && 13 != t && 27 != t) {\n            var o = i.value;\n            if (o.length >= l.minChars) {\n              if (o != i.last_val) {\n                if (i.last_val = o, clearTimeout(i.timer), l.cache) {\n                  if (o in i.cache) return void r(i.cache[o]);\n                  for (var s = 1; s < o.length - l.minChars; s++) {\n                    var n = o.slice(0, o.length - s);\n                    if (n in i.cache && !i.cache[n].length) return void r([]);\n                  }\n                }\n                i.timer = setTimeout(function () {\n                  l.source(o, r);\n                }, l.delay);\n              }\n            } else i.last_val = o, i.sc.style.display = \"none\";\n          }\n        }, o(i, \"keyup\", i.keyupHandler), i.focusHandler = function (e) {\n          i.last_val = \"\\n\", i.keyupHandler(e);\n        }, l.minChars || o(i, \"focus\", i.focusHandler);\n      }\n      this.destroy = function () {\n        for (var e = 0; e < a.length; e++) {\n          var t = a[e];\n          s(window, \"resize\", t.updateSC), s(t, \"blur\", t.blurHandler), s(t, \"focus\", t.focusHandler), s(t, \"keydown\", t.keydownHandler), s(t, \"keyup\", t.keyupHandler), t.autocompleteAttr ? t.setAttribute(\"autocomplete\", t.autocompleteAttr) : t.removeAttribute(\"autocomplete\"), document.body.removeChild(t.sc), t = null;\n        }\n      };\n    }\n  }\n  return e;\n}();\n!function () {\n  \"function\" == typeof define && define.amd ? define(\"autoComplete\", function () {\n    return autoComplete;\n  }) : \"undefined\" != typeof module && module.exports ? module.exports = autoComplete : window.autoComplete = autoComplete;\n}();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}