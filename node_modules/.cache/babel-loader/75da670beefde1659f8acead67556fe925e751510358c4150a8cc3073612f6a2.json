{"ast":null,"code":"import { h } from 'preact';\nimport { UIPlugin } from '@uppy/core';\nimport { Provider } from '@uppy/companion-client';\nimport { ProviderViews } from '@uppy/provider-views';\nconst packageJson = {\n  \"version\": \"2.0.1\"\n};\nimport locale from './locale.js';\nexport default class Zoom extends UIPlugin {\n  constructor(uppy, opts) {\n    super(uppy, opts);\n    this.id = this.opts.id || 'Zoom';\n    Provider.initPlugin(this, opts);\n    this.title = this.opts.title || 'Zoom';\n    this.icon = () => h(\"svg\", {\n      \"aria-hidden\": \"true\",\n      focusable: \"false\",\n      width: \"32\",\n      height: \"32\",\n      viewBox: \"0 0 32 32\"\n    }, h(\"rect\", {\n      className: \"uppy-ProviderIconBg\",\n      width: \"32\",\n      height: \"32\",\n      rx: \"16\",\n      fill: \"#0E71EB\"\n    }), h(\"g\", {\n      fill: \"none\",\n      fillRule: \"evenodd\"\n    }, h(\"path\", {\n      fill: \"#fff\",\n      d: \"M29,31H14c-1.657,0-3-1.343-3-3V17h15c1.657,0,3,1.343,3,3V31z\",\n      style: {\n        transform: 'translate(-5px, -5px) scale(0.9)'\n      }\n    }), h(\"polygon\", {\n      fill: \"#fff\",\n      points: \"37,31 31,27 31,21 37,17\",\n      style: {\n        transform: 'translate(-5px, -5px) scale(0.9)'\n      }\n    })));\n    this.provider = new Provider(uppy, {\n      companionUrl: this.opts.companionUrl,\n      companionHeaders: this.opts.companionHeaders,\n      companionKeysParams: this.opts.companionKeysParams,\n      companionCookiesRule: this.opts.companionCookiesRule,\n      provider: 'zoom',\n      pluginId: this.id\n    });\n    this.defaultLocale = locale;\n    this.i18nInit();\n    this.title = this.i18n('pluginNameZoom');\n    this.onFirstRender = this.onFirstRender.bind(this);\n    this.render = this.render.bind(this);\n  }\n  install() {\n    this.view = new ProviderViews(this, {\n      provider: this.provider\n    });\n    const target = this.opts.target;\n    if (target) {\n      this.mount(target, this);\n    }\n  }\n  uninstall() {\n    this.view.tearDown();\n    this.unmount();\n  }\n  onFirstRender() {\n    return Promise.all([this.provider.fetchPreAuthToken(), this.view.getFolder()]);\n  }\n  render(state) {\n    return this.view.render(state);\n  }\n}\nZoom.VERSION = packageJson.version;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}